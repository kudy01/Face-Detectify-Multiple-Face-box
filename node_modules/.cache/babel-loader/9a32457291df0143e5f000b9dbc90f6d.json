{"ast":null,"code":"var _jsxFileName = \"/Users/kudy/Desktop/Face-Detectify-Multiple-Face-box/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Modal from './components/Modal/Modal';\nimport Profile from './components/Profile/Profile';\nconst ParticlesOptions = {\n  particles: {\n    number: {\n      value: 90,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'signin',\n  //signin\n  isSignedIn: false,\n  //false\n  isProfileOpen: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: '',\n    occupation: '',\n    age: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined,\n          occupation: data.occupation,\n          age: data.age\n        }\n      });\n    };\n\n    this.calculateFaceLocations = data => {\n      if (data && data.outputs) {\n        return data.outputs[0].data.regions.map(face => {\n          const clarifaiFace = face.region_info.bounding_box;\n          const image = document.getElementById('inputimage');\n          const width = Number(image.width);\n          const height = Number(image.height);\n          return {\n            leftCol: clarifaiFace.left_col * width,\n            // because we get percentage of width by the bounding_bxo property\n            topRow: clarifaiFace.top_row * height,\n            rightCol: width - clarifaiFace.right_col * width,\n            bottomRow: height - clarifaiFace.bottom_row * height\n          };\n        });\n      }\n\n      return;\n    };\n\n    this.displayFaceBoxes = boxes => {\n      if (boxes) {\n        this.setState({\n          boxes: boxes\n        });\n      }\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': window.sessionStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': window.sessionStorage.getItem('token')\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBoxes(this.calculateFaceLocations(response));\n      }).catch(err => {\n        console.log(err);\n      });\n      this.setState({\n        boxes: []\n      });\n    };\n\n    this.removeSessionToken = () => {\n      window.sessionStorage.removeItem('token');\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        fetch('http://localhost:3000/signout', {\n          method: 'delete',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': window.sessionStorage.getItem('token')\n          }\n        });\n        this.removeSessionToken();\n        return this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.toggleModal = () => {\n      this.setState(prevState => ({ ...prevState,\n        isProfileOpen: !prevState.isProfileOpen\n      }));\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const token = window.sessionStorage.getItem('token');\n\n    if (token) {\n      fetch('http://localhost:3000/signin', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        }\n      }).then(response => response.json()).then(data => {\n        if (data && data.id) {\n          fetch(`http://localhost:3000/profile/${data.id}`, {\n            method: 'get',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': token\n            }\n          }).then(response => response.json()).then(user => {\n            if (user && user.email) {\n              this.loadUser(user);\n              this.onRouteChange('home');\n            }\n          });\n        }\n      }).catch(console.log);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: ParticlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      toggleModal: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }), this.state.isProfileOpen && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Profile, {\n      isProfileOpen: this.state.isProfileOpen,\n      toggleModal: this.toggleModal,\n      user: this.state.user,\n      loadUser: this.loadUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    })), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      boxes: this.state.boxes,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    })) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kudy/Desktop/Face-Detectify-Multiple-Face-box/src/App.js"],"names":["React","Component","Particles","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","Signin","Register","Modal","Profile","ParticlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","boxes","route","isSignedIn","isProfileOpen","user","id","name","email","entries","joined","occupation","age","App","constructor","loadUser","data","setState","calculateFaceLocations","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBoxes","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","window","sessionStorage","getItem","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","removeSessionToken","removeItem","onRouteChange","toggleModal","prevState","componentDidMount","token","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank'; \nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Modal from './components/Modal/Modal';\nimport Profile from './components/Profile/Profile';\n\nconst ParticlesOptions = {\n  particles: {\n    number :{\n        value: 90,\n        density: {\n          enable: true,\n          value_area: 800\n        }\n    }\n}\n}\n\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      boxes: [],\n      route: 'signin', //signin\n      isSignedIn: false, //false\n      isProfileOpen: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: '',\n        occupation: '',\n        age: ''\n      }\n};\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    const token = window.sessionStorage.getItem('token');\n    if(token) {\n      fetch('http://localhost:3000/signin', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json', \n          'Authorization': token\n        }\n      })\n      .then(response => response.json())\n      .then(data => {\n        if(data && data.id) {\n          fetch(`http://localhost:3000/profile/${data.id}`,{\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json', \n          'Authorization': token\n        }            \n        })\n          .then(response=> response.json())\n          .then(user => {\n            if(user && user.email){\n              this.loadUser(user)\n              this.onRouteChange('home')\n            }\n          })\n      }\n    })\n      .catch(console.log)\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({ user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined,\n      occupation: data.occupation,\n      age: data.age\n      }})\n  }\n\n  calculateFaceLocations = (data) => {\n    if(data && data.outputs) {\n\n    return data.outputs[0].data.regions.map(face =>{\n      const clarifaiFace = face.region_info.bounding_box; \n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width, // because we get percentage of width by the bounding_bxo property\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height)\n      }\n    })\n    }\n    return \n  }\n\n  displayFaceBoxes = (boxes) => {\n    if(boxes){\n      \n    this.setState({boxes: boxes});\n    }\n  }\n\n  onInputChange = (event) => {\n  this.setState({input: event.target.value});\n  }\n    \n \n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n      fetch('http://localhost:3000/imageurl', {\n            method: 'post',\n            headers: {\n            'Content-Type': 'application/json', \n            'Authorization': window.sessionStorage.getItem('token')\n            },\n            body: JSON.stringify({\n              input: this.state.input\n            })\n          })\n      .then(response => response.json())\n      .then((response) => {\n        if(response){\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json', \n              'Authorization': window.sessionStorage.getItem('token')\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, {entries: count}))\n            })\n            .catch(console.log);\n        }\n        this.displayFaceBoxes(this.calculateFaceLocations(response))\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n      this.setState({boxes: []})\n    };\n  \n  removeSessionToken = () => {\n    window.sessionStorage.removeItem('token')\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      fetch('http://localhost:3000/signout', {\n        method: 'delete',\n        headers: {\n              'Content-Type': 'application/json', \n              'Authorization': window.sessionStorage.getItem('token')\n            },\n        })\n      this.removeSessionToken()\n      return this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      isProfileOpen: !prevState.isProfileOpen\n    }))\n  }\n  render(){\n  return (\n    <div className=\"App\">\n      <Particles className='particles'\n        params={ParticlesOptions}\n      />        \n      <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} toggleModal={this.toggleModal}/>\n        { this.state.isProfileOpen && \n          <Modal>\n            <Profile isProfileOpen={this.state.isProfileOpen} toggleModal={this.toggleModal} user={this.state.user} loadUser={this.loadUser}/>\n          </Modal>\n        }  \n      { this.state.route === 'home' \n        ? <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/> \n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />  \n            <FaceRecognition boxes={this.state.boxes} imageUrl={this.state.imageUrl} />\n          </div>\n        : (\n            this.state.route === 'signin' \n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> \n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          ) \n    }\n    </div>  \n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}